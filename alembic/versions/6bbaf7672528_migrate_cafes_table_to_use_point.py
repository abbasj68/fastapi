"""migrate cafes table to use POINT

Revision ID: 6bbaf7672528
Revises: fdab38272439
Create Date: 2025-08-19 16:34:18.567714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from geoalchemy2 import Geometry


# revision identifiers, used by Alembic.
revision: str = '6bbaf7672528'
down_revision: Union[str, Sequence[str], None] = 'fdab38272439'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cafes', 'location',
               existing_type=Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               nullable=False)
    conn = op.get_bind()
    for col in ["longitude", "latitude"]:
        result = conn.execute(
            sa.text(f"""
                SELECT COUNT(*) 
                FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_NAME = 'cafes' AND COLUMN_NAME = '{col}'
            """)
        ).scalar()

        if result and result > 0:
            op.drop_column('cafes', col)
    op.execute("UPDATE token SET jti = UUID() WHERE jti IS NULL OR jti = ''")
    op.create_unique_constraint('uq_token_jti', 'token', ['jti'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_token_jti', 'token', type_='unique')
    op.add_column('cafes', sa.Column('latitude', mysql.FLOAT(), nullable=False))
    op.add_column('cafes', sa.Column('longitude', mysql.FLOAT(), nullable=False))
    op.alter_column('cafes', 'location',
               existing_type=Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               nullable=True,)
    # ### end Alembic commands ###
